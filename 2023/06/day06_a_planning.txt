// VARIABLES
// ---------
    // KNOWN VALUES (GLOBAL)
    // ---------------------
    START_SPEED = 0 mm/ms
    SPEED_INCREASE_PER_TIME_PRESSED = 1 mm/ms

    // KNOWN VALUES (PER RACE)
    // -----------------------
    raceTime (in ms)
    recordDistance (in mm)

    // UNKNOWN VALUES (PER RACE)
    // -------------------------
    timePressed (in ms)
    timeTraveled (in ms)
    travelSpeed (in mm/ms)
    distanceTravelled (in mm)
    numWaysToWin
    minTimePressedToWin (in ms)
    maxTimePressedToWin (in ms)

    // UNKNOWN VALUES (GLOBAL)
    // -----------------------
    marginOfError


// FORMULAS
// --------
    // PER RACE
    // --------
    timeTraveled = raceTime - timePressed
    travelSpeed = timePressed * SPEED_INCREASE_PER_TIME_PRESSED
    distanceTraveled = travelSpeed * timeTraveled
    numWaysToWin = maxTimePressedToWin - minTimePressedToWin + 1

    // GLOBAL
    // ------
    marginOfError = numWaysToWin_race1 * numWaysToWin_race2 * ... * numWaysToWin_raceN


// CLASSES
// -------
    CLASS Race:
        // ATTRIBUTES
        // ----------
        INTEGER id
        INTEGER raceTime
        INTEGER recordDistance
        INTEGER minTimePressedToWin
        INTEGER maxTimePressedToWin

        CONSTRUCTOR Race(p_id, p_raceTime, p_recordDistance):
            self.id = p_id
            self.raceTime = p_raceTime
            self.recordDistance = p_recordDistance
            self.minTimePressedToWin = CalcMinTimePressedToWin()
            self.maxTimePressedToWin = self.raceTime - self.minTimePressedToWin
        END-CONSTRUCTOR

        METHOD CalcMinTimePressedToWin():
            INITIALIZE timePress = Floor(raceTime / 2)
            DO:
                SET minTimePress = timePress
                CALCULATE travelSpeed = timePress * SPEED_INCREASE_PER_TIME_PRESSED
                CALCULATE distanceTraveled = timePress * travelSpeed
                DECREMENT timePress BY 1
            WHILE distanceTraveled > recordDistance
            RETURN minTimePress
        END-METHOD

        METHOD CalcNumWaysToWin():
            // NOTE: Range is *inclusive* here
            numWaysToWin = RANGE[self.minTimePressedToWin, self.maxTimePressedToWin]
        END-METHOD

    END-CLASS

